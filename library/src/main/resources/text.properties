##################################
#          PAGES PATHS           #
##################################
path.page.index=/index.jsp
path.page.login=/jsp/login.jsp
path.page.main=/jsp/main.jsp
path.page.error=/jsp/error/error.jsp
path.page.users=/jsp/users.jsp
path.page.user=/jsp/user.jsp
path.page.groups=/jsp/groups.jsp
path.page.group=/jsp/group.jsp
path.page.specialties=/jsp/specialties.jsp
path.page.specialty=/jsp/specialty.jsp
path.page.literature=/jsp/literature.jsp
path.page.reserve=/jsp/literatureCollection.jsp
path.page.book=/jsp/book.jsp
##################################
#       ATTRIBUTES NAMES         #
##################################
atr.userinfo=userInfo
atr.users=users
atr.errorLoginPassMessage=errorLoginPassMessage
atr.login=login
atr.wrongAction=wrongAction
atr.fullname=fullname
atr.groups=groups
atr.studgroup=studentGroup
atr.teachergroups=teacherGroups
atr.teacherdisciplines=teacherDisciplines
atr.specialtyes=specialties
atr.disciplines=disciplines
atr.groupinfo=groupInfo
atr.groupdisciplines=groupDisciplines
atr.specialties=specialties
atr.specialtyInfo=specialtyInfo
atr.literatureCollections=literatureCollections
atr.literature=literatureList
atr.literatureCollection=literatureCollectionData
atr.literatureInfo=literatureInfo
atr.checkResult=result 
##################################
#       PARAMETERS NAMES         #
##################################
par.userid=userID
par.command=command
par.login=login
par.password=password
par.deleteUser=deleteUser
par.changeUser=changeUser
par.fullname=fullName
par.role=role
par.search=search-data
par.group=group
par.disciplines=discipline[]
par.groups=group[]
par.groupName=groupName
par.groupSpecialty=specialty
par.groupDisciplines=discipline[]
par.groupid=groupID
par.specialtyid=specialtyID
par.specialtyName=specialtyName
par.standardParameter=standardParameter
par.standartDescription=standartDescription
par.literatureName=literatureName
par.literatureAuthor=literatureAuthor
par.literatureYear=literatureYear
par.checkDisciplines=discipline
par.checkSpecialty=specialties
##################################
#          DAO MANAGER           #
##################################
dao.dbtype=ORACLE
dao.user=userDAO
dao.group=groupDAO
dao.discipline=disciplineDAO
dao.standart=standartDAO
dao.specialty=specialtyDAO
dao.literature=literatureDAO
##################################
#          MESSAGE DATA          #
##################################
message.loginerror=Incorrect login or password.
message.nullpage=Page not found. Business logic error.
message.wrongaction=: command not found or wrong!
message.authorizationerror=Please, login first.
message.reserveError=\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0432\u0442\u043E \u0441\u0442\u0443\u0434\u0435\u043D\u0442\u043E\u0432 \u0432 \u0433\u0440\u0443\u043F\u043F\u0435 \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0432\u0442\u043E \u0441\u0432\u043E\u0431\u043E\u0434\u043D\u043E\u0439 \u043B\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u044B
message.checkGood=\u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043F\u0440\u043E\u0439\u0434\u0435\u043D\u0430
message.checkBad=\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043D\u0435 \u043F\u0440\u043E\u0439\u0434\u0435\u043D\u0430
message.reserveGood=\u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0448\u043B\u043E \u0443\u0441\u043F\u0435\u0448\u043D\u043E
message.reserveBad=\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u0430\u044F \u043B\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0437\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043E\u0432\u0430\u043D\u0430
##################################
#            JDBC DATA           #
##################################
oracle.db.driver=oracle.jdbc.driver.OracleDriver
oracle.db.url=jdbc:oracle:thin:@localhost:1521:XE
oracle.db.user=LIBRARY_DATABASE
oracle.db.password=111
##################################
#            SQL QUERY           #
##################################
sql.getPassword=SELECT Password FROM USER_VIEW WHERE login = (?)
sql.getUserByLogin=SELECT * FROM USER_VIEW, USER_ROLE_VIEW, USER_STATUS_VIEW WHERE USER_VIEW.ROLE = USER_ROLE_VIEW.ID AND USER_VIEW.STATUS = USER_STATUS_VIEW.ID AND LOGIN = ?
sql.getUsersCount=SELECT COUNT(*) FROM USER_VIEW WHERE UPPER(FULL_NAME)LIKE ? OR UPPER(LOGIN) LIKE ?
sql.searchUsers=SELECT * FROM (SELECT * FROM (SELECT USER_VIEW.ID, USER_VIEW.LOGIN, USER_VIEW.PASSWORD, USER_VIEW.FULL_NAME, USER_ROLE_VIEW.NAME   AS ROLE, USER_STATUS_VIEW.NAME AS STATUS FROM USER_VIEW, USER_ROLE_VIEW, USER_STATUS_VIEW WHERE USER_VIEW.ROLE = USER_ROLE_VIEW.ID AND USER_VIEW.STATUS = USER_STATUS_VIEW.ID) users_data where UPPER(users_data.LOGIN) LIKE ? OR UPPER(users_data.FULL_NAME) LIKE ? ORDER BY ID) WHERE ROWNUM <=? MINUS SELECT * FROM (SELECT * FROM (SELECT USER_VIEW.ID, USER_VIEW.LOGIN, USER_VIEW.PASSWORD, USER_VIEW.FULL_NAME, USER_ROLE_VIEW.NAME   AS ROLE, USER_STATUS_VIEW.NAME AS STATUS FROM USER_VIEW, USER_ROLE_VIEW, USER_STATUS_VIEW WHERE USER_VIEW.ROLE = USER_ROLE_VIEW.ID AND USER_VIEW.STATUS = USER_STATUS_VIEW.ID) users_data where UPPER(users_data.LOGIN) LIKE ? OR UPPER(users_data.FULL_NAME) LIKE ? ORDER BY ID) WHERE ROWNUM <= ?
sql.getGroups=SELECT * FROM STUDENT_GROUP_VIEW
sql.getSpecialtyByID=SELECT * from SPECIALTY_VIEW where id = ?
sql.getStudentsID=SELECT ID FROM STUDENTS_VIEW WHERE STUDENT_GROUP = ?
sql.getUserByID=SELECT * FROM USER_VIEW, USER_ROLE_VIEW, USER_STATUS_VIEW WHERE USER_VIEW.ROLE = USER_ROLE_VIEW.ID AND USER_VIEW.STATUS = USER_STATUS_VIEW.ID AND USER_VIEW.ID = ?
sql.addAdministrator=call ADD_USER(?,?,?, 1, 2)
sql.addLibrarian=call ADD_USER(?,?,?, 2, 2)
sql.addStudent=call ADD_USER(?,?,?, 4, 2)
sql.getGroupByName=SELECT * FROM STUDENT_GROUP_VIEW WHERE NAME =?
sql.addStudentInfo=call ADD_STUDENTS(?, ?, ?)
sql.addTeacher=call ADD_USER(?,?,?, 3, 2)
sql.addTeacherData=call ADD_TEACHERS(?, ?, ?)
sql.getDisciplineIDByName=SELECT ID FROM DISCIPLINE_VIEW WHERE NAME = ?
sql.getUserIDByLogin=select id from USER_VIEW where login = ?
sql.getTeacherGroupDiscipline=SELECT STUDENT_GROUP_VIEW.NAME, DISCIPLINE_VIEW.NAME AS Discipline FROM (SELECT * FROM TEACHERS_VIEW WHERE TEACHER = ?) t, STUDENT_GROUP_VIEW, DISCIPLINE_VIEW WHERE STUDENT_GROUP_VIEW.ID = t.STUDENT_GROUP AND DISCIPLINE_VIEW.ID = t.DISCIPLINE
sql.deleteUser=call DELETE_USER(?)
sql.changeAdministrator=call CHANGE_USER(?,?,?, 1, 2, ?)
sql.changeLibrarian=call CHANGE_USER(?,?,?, 2, 2,?)
sql.changeStudent=call CHANGE_USER(?,?,?, 4, 2, ?)
sql.changeTeacher=call CHANGE_USER(?,?,?, 3, 2, ?)
sql.deleteTeacherInfo=DELETE FROM TEACHERS_TEACHER WHERE ID IN (SELECT ID FROM TEACHERS_VIEW WHERE TEACHER = ?)
sql.deleteStudentData=DELETE FROM STUDENTS_STUDENT WHERE ID IN (SELECT STUDENTS_VIEW.ID FROM STUDENTS_VIEW WHERE STUDENT = ?)
sql.getGroupsCount=SELECT COUNT(*) FROM STUDENT_GROUP_VIEW
sql.getGroupDisciplines=SELECT DISCIPLINE_VIEW.NAME FROM DISCIPLINE_VIEW, GD_VIEW WHERE GD_VIEW.STUDENT_GROUP = ? AND GD_VIEW.DISCIPLINE = DISCIPLINE_VIEW.ID
sql.getGroupInfo=SELECT * FROM STUDENT_GROUP_VIEW WHERE ID = ?
sql.addGroup=call ADD_STUDENT_GROUP(?, ?)
sql.addGroupDiscipline=call ADD_GD(?,?)
sql.deleteGroupDisciplines=DELETE From GD_STUDENT_GROUP WHERE GD_STUDENT_GROUP.VALUE = ?
sql.changeGroup=call CHANGE_STUDENT_GROUP(?,?,?)
sql.getSpecialties=SELECT * FROM SPECIALTY_VIEW
sql.getDisciplines=select * from DISCIPLINE_VIEW
sql.getDisciplineInfo=SELECT * FROM DISCIPLINE_VIEW WHERe id = ?
sql.changeDiscipline=call CHANGE_DISCIPLINE(?, ?)
sql.deleteDiscipline=call DELETE_DISCIPLINE(?)
sql.addDiscipline=call ADD_DISCIPLINE(?)
sql.deleteGroup=call DELETE_STUDENT_GROUP(?)
sql.getDisciplinesID=SELECT * FROM DISCIPLINE_VIEW
sql.addSpecialty=call ADD_SPECIALTY(?,?,?,?)
sql.changeSpecialty=call CHANGE_SPECIALTY(?, ?, ?, ?, ?)
sql.deleteSpecialty=call DELETE_SPECIALTY(?)
sql.getStudentData=SELECT * FROM STUDENTS_VIEW WHERE STUDENT = ?
sql.login=update USER_STATUS set value = 1 where id = (select id from user_view where login = ?)
sql.logout=update USER_STATUS set value = 2 where id = (select id from user_view where login = ?)
sql.getLiteratureCollectionCount=SELECT COUNT (*) FROM (SELECT NAME, YEAR, AUTHOR, BOOK_TYPE FROM LIBRARY_FUND_VIEW GROUP BY LIBRARY_FUND_VIEW.NAME, YEAR, AUTHOR, BOOK_TYPE)
sql.getLiteratureCollections=SELECT NAME, YEAR, AUTHOR, BOOK_TYPE FROM LIBRARY_FUND_VIEW  WHERE UPPER(NAME) LIKE ? OR UPPER(AUTHOR) LIKE ? GROUP BY LIBRARY_FUND_VIEW.NAME, YEAR, AUTHOR, BOOK_TYPE
sql.getLiteratureCollectionFreeCount=SELECT COUNT(*)FROM LIBRARY_FUND_VIEW WHERE STATUS = 1 AND NAME = ? AND AUTHOR = ? AND YEAR = ? AND BOOK_TYPE = ?
sql.getLiteratureType=SELECT * FROM BOOK_TYPE_VIEW WHERE ID = ?
sql.getLiteratureCount=SELECT COUNT(*) FROM LIBRARY_FUND_VIEW WHERE UPPER(NAME) LIKE ? OR UPPER(AUTHOR) LIKE ? OR UPPER(DESCRIPTION) LIKE ? OR UPPER(ISBN) LIKE ?
sql.getLiteratureList=SELECT * FROM (SELECT * FROM LIBRARY_FUND_VIEW WHERE UPPER(NAME) LIKE ? OR UPPER(AUTHOR) LIKE ? OR UPPER(DESCRIPTION) LIKE ? OR UPPER(ISBN) LIKE ? ORDER BY ID) WHERE ROWNUM <= ? MINUS SELECT * FROM (SELECT * FROM LIBRARY_FUND_VIEW WHERE UPPER(NAME) LIKE ? OR UPPER(AUTHOR) LIKE ? OR UPPER(DESCRIPTION) LIKE ? OR UPPER(ISBN) LIKE ? ORDER BY ID) WHERE ROWNUM <= ?
sql.getLiteratureStatus=SELECT * FROM BOOK_STATUS_VIEW WHERE ID = ?
sql.addLiterature=call ADD_LIBRARY_FUND(?,?,?,?,?,?,?,?,null)
sql.changeLiterature=call CHANGE_LIBRARY_FUND(?,?,?,?,?,?,?,?,?,?)
sql.deleteLiterature=CALL DELETE_LIBRARY_FUND(?)
sql.getBookInfo=SELECT * FROM LIBRARY_FUND_VIEW WHERE ID = ?
sql.getUserLiterature=SELECT * FROM LIBRARY_FUND_VIEW WHERE holder = ?
sql.getLiteratureDates=SELECT ID, MAX(CHANGE_TIME) FROM LIBRARY_FUND_HOLDER WHERE VALUE = ? GROUP BY ID
sql.returnLiterature=INSERT INTO LIBRARY_FUND_HOLDER (ID, VALUE, CHANGE_TIME ) VALUES (? , -1, CURRENT_TIMESTAMP)
sql.extendLiterature=INSERT INTO LIBRARY_FUND_RENTAL (ID, VALUE, CHANGE_TIME) VALUES (?, ? , CURRENT_TIMESTAMP)
sql.getSpecialtyGroupsID=SELECT ID FROM STUDENT_GROUP_VIEW WHERE SPECIALTY = ?
sql.getSpecialtyDisciplines=SELECT DISCIPLINE_VIEW.ID, DISCIPLINE_VIEW.NAME FROM GD_VIEW, DISCIPLINE_VIEW WHERE STUDENT_GROUP = ? AND GD_VIEW.DISCIPLINE = DISCIPLINE_VIEW.ID
sql.getGroupsWithDisciplines=SELECT STUDENT_GROUP_VIEW.* FROM STUDENT_GROUP_VIEW, GD_VIEW WHERE GD_VIEW.DISCIPLINE = ? AND STUDENT_GROUP_VIEW.SPECIALTY = ?
sql.getLiterStatusCount=SELECT COUNT(*) FROM LIBRARY_FUND_VIEW WHERE STATUS = ?
sql.getHoldersID=SELECT HOLDER FROM LIBRARY_FUND_VIEW WHERE HOLDER != -1
sql.getBooksIDS=SELECT * FROM LIBRARY_FUND_VIEW WHERE NAME = ? AND AUTHOR = ? AND YEAR = ? AND BOOK_TYPE = ? AND STATUS = 1
sql.reserveBook =INSERT ALL into LIBRARY_FUND_STATUS (id, VALUE, CHANGE_TIME) values (?, 2, CURRENT_TIMESTAMP) into LIBRARY_FUND_HOLDER (id, VALUE, CHANGE_TIME) values (?, ?, CURRENT_TIMESTAMP) SELECT * FROM dual
sql.getTeacherGroups = SELECT * FROM STUDENT_GROUP_VIEW WHERE ID = (select STUDENT_GROUP from TEACHERS_VIEW where TEACHER = ?)
sql.getReserveRequestList =SELECT  RESID, TEACHER, ST_GROUP, DISCIPLINE FROM RESERVE_VIEW WHERE TEACHER = ? GROUP BY RESID,  TEACHER, ST_GROUP, DISCIPLINE
sql.getReserveBooks = SELECT BOOK FROM RESERVE_VIEW WHERE RESID = ?
sql.unreserveBooks =INSERT INTO LIBRARY_FUND_STATUS (ID, VALUE, CHANGE_TIME) VALUES (?, 1 , CURRENT_TIMESTAMP)
sql.deleteReserveRequest =DELETE FROM RESERVE_RESID WHERE VALUE = ?
sql.addReserveRequest = CALL ADD_RESERVE(?, ? , ?, ?, ?)






















































