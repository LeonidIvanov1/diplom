##################################
#          PAGES PATHS           #
##################################
path.page.index=/index.jsp
path.page.login=/jsp/login.jsp
path.page.main=/jsp/main.jsp
path.page.error=/jsp/error/error.jsp
path.page.users=/jsp/users.jsp
path.page.user=/jsp/user.jsp
path.page.groups=/jsp/groups.jsp
path.page.group=/jsp/group.jsp
path.page.specialties =/jsp/specialties.jsp
path.page.specialty =/jsp/specialty.jsp
path.page.literature = /jsp/literature.jsp
path.page.reserve = /jsp/literatureCollection.jsp
path.page.book = /jsp/book.jsp
##################################
#       ATTRIBUTES NAMES         #
##################################
atr.userinfo=userInfo
atr.users=users
atr.errorLoginPassMessage= errorLoginPassMessage
atr.login= login
atr.wrongAction = wrongAction
atr.fullname= fullname
atr.groups= groups
atr.studgroup= studentGroup
atr.teachergroups= teacherGroups
atr.teacherdisciplines=teacherDisciplines
atr.specialtyes = specialties
atr.disciplines = disciplines
atr.groupinfo = groupInfo
atr.groupdisciplines= groupDisciplines
atr.specialties= specialties
atr.specialtyInfo = specialtyInfo
atr.literatureCollections = literatureCollections
atr.literature = literatureList
atr.literatureCollection = literatureCollectionData
atr.literatureInfo = literatureInfo
atr.checkResult =result 
##################################
#       PARAMETERS NAMES         #
##################################
par.userid=userID
par.command = command
par.login= login
par.password= password
par.deleteUser= deleteUser
par.changeUser = changeUser
par.fullname = fullName
par.role = role
par.search=search-data
par.group = group
par.disciplines= discipline[]
par.groups= group[]
par.groupName= groupName
par.groupSpecialty= specialty
par.groupDisciplines = discipline[]
par.groupid=groupID
par.specialtyid=specialtyID
par.specialtyName=specialtyName
par.standartParameter = standartParameter
par.standartDescription = standartDescription
par.literatureName = literatureName
par.literatureAuthor = literatureAuthor
par.literatureYear = literatureYear
par.checkDisciplines = discipline
par.checkSpecialty = specialties
##################################
#          DAO MANAGER           #
##################################
dao.dbtype= ORACLE
dao.user= userDAO
dao.group= groupDAO
dao.discipline= disciplineDAO
dao.standart= standartDAO
dao.specialty = specialtyDAO
dao.literature = literatureDAO
##################################
#          MESSAGE DATA          #
##################################
message.loginerror = Incorrect login or password.
message.nullpage = Page not found. Business logic error.
message.wrongaction = : command not found or wrong!
message.authorizationerror= Please, login first.
message.reserveError = \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0432\u0442\u043E \u0441\u0442\u0443\u0434\u0435\u043D\u0442\u043E\u0432 \u0432 \u0433\u0440\u0443\u043F\u043F\u0435 \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0432\u0442\u043E \u0441\u0432\u043E\u0431\u043E\u0434\u043D\u043E\u0439 \u043B\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u044B
message.checkGood = \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043F\u0440\u043E\u0439\u0434\u0435\u043D\u0430
message.checkBad = \u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043D\u0435 \u043F\u0440\u043E\u0439\u0434\u0435\u043D\u0430
message.reserveGood = \u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0448\u043B\u043E \u0443\u0441\u043F\u0435\u0448\u043D\u043E
message.reserveBad = \u0412\u044B\u0431\u0440\u0430\u043D\u043D\u0430\u044F \u043B\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0437\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043E\u0432\u0430\u043D\u0430
##################################
#            JDBC DATA           #
##################################
oracle.db.driver = oracle.jdbc.driver.OracleDriver
oracle.db.url = jdbc:oracle:thin:@localhost:1521:XE
oracle.db.user = LIBRARY_DB
oracle.db.password = 111
##################################
#            SQL QUERY           #
##################################
sql.getPassword= SELECT Password FROM LibraryUser WHERE login = (?)
sql.getStatus= SELECT userstatus.description FROM LibraryUser, UserStatus WHERE 1=1 AND LibraryUser.StatusID = UserStatus.userstatusid AND LibraryUser.Login = (?)
sql.login= UPDATE LibraryUser Set statusid = (SELECT userstatusid FROM UserStatus WHERE 1=1 AND Description LIKE 'ONLINE') WHERE login = (?)
sql.logout= UPDATE LibraryUser Set statusid = (SELECT userstatusid FROM UserStatus WHERE 1=1 AND Description LIKE 'OFFLINE') WHERE login = (?)
sql.getuserrole= SELECT Description FROM UserRole WHERE UserRoleID = (SELECT RoleID FROM LibraryUser WHERE Login = (?))
sql.getusers= SELECT LibraryUser.FullName, Login, Password, UserRole.Description, UserStatus.Description FROM LibraryUser, UserRole, UserStatus WHERE 1=1 AND LibraryUser.statusid = UserStatus.userstatusid AND LibraryUser.RoleID = UserRole.UserRoleID
sql.getuserfullname= SELECT LibraryUser.FullName FROM LibraryUser WHERE 1=1 AND LibraryUser.login = (?)
sql.getgroups= SELECT Standart.StandartParameter , Standart.Description, Specialty.name, StudentGroup.Description FROM Standart, Specialty, StudentGroup WHERE 1=1 AND Standart.StandartID = Specialty.StandartID AND Specialty.SpecialtyID = StudentGroup.SpecialtyID
sql.deleteuser= DELETE FROM LibraryUser WHERE login = (?)
sql.deletefromStudents = DELETE FROM Student WHERE UserID = (SELECT UserID FROM LibraryUser WHERE login = (?))
sql.changeUser= UPDATE LibraryUser SET fullname = (?), password = (?) WHERE login = (?)
sql.addUser= INSERT INTO LibraryUser (UserID, FullName, Login, Password, StatusID, RoleID) VALUES ((SELECT MAX(UserID) +1 FROM LibraryUser), (?), (?), (?), 2, (SELECT UserRoleID FROM UserRole WHERE Description = (?)))
sql.setStudentGroup= UPDATE Student SET GroupID = (SELECT GroupID FROM StudentGroup WHERE Description = (?) ) WHERE UserID = (SELECT UserID FROM LibraryUser WHERE login = (?) )
sql.addUserToStudentGroup = INSERT INTO Student (userID, GroupID) VALUES ((SELECT userid FROM LibraryUser WHERE login = (?)), (SELECT GroupID FROM StudentGroup WHERE DESCRIPTION = (?)))
sql.addTeacherDiscipline= INSERT INTO Teacher (userID, DisciplineID) VALUES ((SELECT userid FROM LibraryUser WHERE login = (?)), (SELECT DisciplineID FROM Discipline WHERE DESCRIPTION = (?)))
sql.getdisciplines= SELECT Description FROM Discipline
sql.getUserGroup= SELECT Standart.StandartParameter , Standart.Description, Specialty.name, StudentGroup.Description FROM Standart, Specialty, StudentGroup, Student WHERE Student.UserID = (SELECT UserID FROM LibraryUser WHERE login=(?)) AND Student.GroupID = StudentGroup.GroupID AND StudentGroup.SpecialtyID = Specialty.SpecialtyID  AND Standart.StandartID = Specialty.StandartID AND Specialty.SpecialtyID = StudentGroup.SpecialtyID 
sql.getTeacherDisciplines = SELECT Description FROM Discipline, Teacher WHERE Teacher.UserID = (SELECT UserID FROM LibraryUser WHERE login = (?)) AND Teacher.DisciplineID = Discipline.DisciplineID 
sql.changeUserGroup = UPDATE Student SET GroupID = (SELECT GroupID FROM StudentGroup WHERE Description = (?) ) WHERE UserID = (SELECT UserID FROM LibraryUser WHERE login = (?) )
sql.deleteTeacherDisciplines = DELETE FROM Teacher WHERE UserID = (SELECT userID FROM LibraryUser WHERE login =(?))
sql.deleteTeacherGroups = DELETE FROM Student WHERE UserID = (SELECT userID FROM LibraryUser WHERE login =(?))
sql.getSpecialties = SELECT name, StandartParameter, Description FROM Specialty, Standart WHERE Specialty.StandartID = Standart.StandartID
sql.addGroup = INSERT INTO StudentGroup (GroupID, SpecialtyID, Description) VALUES ((SELECT MAX(GroupID)+1 FROM StudentGroup), (SELECT SpecialtyID FROM Specialty WHERE name=(?)), (?))
sql.addGroupDiscipline = INSERT INTO GroupDiscipline (GroupID, DisciplineID) VALUES ((SELECT GroupID FROM StudentGroup WHERE Description=(?)), (SELECT DisciplineID FROM Discipline WHERE Description=(?)))
sql.studentsInGroupCount = SELECT COUNT(UserID) FROM Student  WHERE GroupID = (SELECT GroupID FROM StudentGroup WHERE Description = (?)) AND Student.UserID IN (SELECT UserID FROM LibraryUser WHERE RoleID = 4) 
sql.getUsersInGroup = SELECT LibraryUser.FullName, Login, Password, UserRole.Description, UserStatus.Description FROM LibraryUser, UserRole, UserStatus WHERE 1=1 AND LibraryUser.statusid = UserStatus.userstatusid AND LibraryUser.RoleID = UserRole.UserRoleID AND LibraryUser.RoleID = 4 AND LibraryUser.UserID IN (SELECT UserID FROM STUDENT WHERE GroupID = (SELECT GroupID FROM StudentGroup WHERE Description= (?)))
sql.getGroupDisciplines = SELECT Description FROM Discipline, GroupDiscipline WHERE GroupDiscipline.GroupID = (SELECT GroupID FROM StudentGroup WHERE Description = (?)) AND GroupDiscipline.DisciplineID = Discipline.DisciplineID 
sql.delteGroup = DELETE FROM StudentGroup WHERE Description = (?)
sql.addStandart = INSERT INTO Standart (StandartID, StandartParameter, Description) VALUES ((SELECT MAX(StandartID)+ 1 FROM Standart), (?), (?))
sql.addSpecialty = INSERT INTO  Specialty (SpecialtyID, StandartID, name) VALUES ((SELECT MAX(SpecialtyID)+ 1 FROM Specialty), (SELECT StandartID FROM Standart WHERE Description = (?)), (?))
sql.removeStandart = DELETE FROM Standart WHERE Description =(?)
sql.removeSpecialty = DELETE FROM Specialty WHERE name = (?)
sql.getLiteratureCollections = SELECT Library_fund.Name, Author, Year, COUNT(*) FROM Library_fund  WHERE STATUSID = 1 GROUP BY Library_fund.Name, Author, Year 
sql.getLiterature = SELECT Library_fund.name, author, isbn, year, description, FullName, Book_status.Name FROM (Library_fund LEFT JOIN LibraryUser ON Library_fund.userid = libraryuser.userid) LEFT JOIN book_status ON  Library_fund.StatusID = book_status.statusid
sql.getLiteratureCollection = SELECT Library_fund.Name, Author, Year, COUNT(*) FROM Library_fund  WHERE STATUSID = 1 AND Library_fund.Name= (?) AND author = (?) AND Year = (?) GROUP BY Library_fund.Name, Author, Year 
sql.reserveLiterature = UPDATE Library_fund SET StatusID = 2, UserID = (SELECT UserID FROM LibraryUser WHERE login=(?)) WHERE BookID = (SELECT MAX(BookID) FROM Library_fund WHERE Name= (?) AND author= (?) AND year = (?) AND StatusID = 1 )
sql.addLiterature = INSERT INTO Library_fund (BookID, StatusID, UserID, Name, Author, ISBN, Year, Description) VALUES ((SELECT MAX(BookID) + 1 FROM Library_fund), 1, null, (?), (?), (?), (?), (?))
sql.deleteLiterature = DELETE FROM Library_fund WHERE ISBN = (?)
sql.changeLiterature = UPDATE Library_fund SET Name = (?), Author = (?), year = (?), Description=(?) WHERE ISBN = (?)